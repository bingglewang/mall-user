<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.malluserdb.mapper.InteractionActivityMapper">
  <resultMap id="BaseResultMap" type="com.zsl.malluserdb.po.InteractionActivity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="activity_name" jdbcType="VARCHAR" property="activityName" />
    <result column="share_title" jdbcType="VARCHAR" property="shareTitle" />
    <result column="share_image" jdbcType="VARCHAR" property="shareImage" />
    <result column="share_context" jdbcType="VARCHAR" property="shareContext" />
    <result column="coin" jdbcType="INTEGER" property="coin" />
    <result column="gold" jdbcType="INTEGER" property="gold" />
    <result column="extract_times" jdbcType="INTEGER" property="extractTimes" />
    <result column="extract_limit" jdbcType="INTEGER" property="extractLimit" />
    <result column="recommend_coin" jdbcType="INTEGER" property="recommendCoin" />
    <result column="recommended_coin" jdbcType="INTEGER" property="recommendedCoin" />
    <result column="recommend_times" jdbcType="INTEGER" property="recommendTimes" />
    <result column="recommend_limit" jdbcType="INTEGER" property="recommendLimit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zsl.malluserdb.po.InteractionActivity">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_name, share_title, share_image, share_context, coin, gold, extract_times, 
    extract_limit, recommend_coin, recommended_coin, recommend_times, recommend_limit, 
    create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zsl.malluserdb.po.InteractionActivityExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from interaction_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zsl.malluserdb.po.InteractionActivityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from interaction_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from interaction_activity
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from interaction_activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from interaction_activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from interaction_activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsl.malluserdb.po.InteractionActivityExample">
    delete from interaction_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsl.malluserdb.po.InteractionActivity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into interaction_activity (activity_name, share_title, share_image, 
      share_context, coin, gold, 
      extract_times, extract_limit, recommend_coin, 
      recommended_coin, recommend_times, recommend_limit, 
      create_time, update_time, remark
      )
    values (#{activityName,jdbcType=VARCHAR}, #{shareTitle,jdbcType=VARCHAR}, #{shareImage,jdbcType=VARCHAR}, 
      #{shareContext,jdbcType=VARCHAR}, #{coin,jdbcType=INTEGER}, #{gold,jdbcType=INTEGER}, 
      #{extractTimes,jdbcType=INTEGER}, #{extractLimit,jdbcType=INTEGER}, #{recommendCoin,jdbcType=INTEGER}, 
      #{recommendedCoin,jdbcType=INTEGER}, #{recommendTimes,jdbcType=INTEGER}, #{recommendLimit,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zsl.malluserdb.po.InteractionActivity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into interaction_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityName != null">
        activity_name,
      </if>
      <if test="shareTitle != null">
        share_title,
      </if>
      <if test="shareImage != null">
        share_image,
      </if>
      <if test="shareContext != null">
        share_context,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="gold != null">
        gold,
      </if>
      <if test="extractTimes != null">
        extract_times,
      </if>
      <if test="extractLimit != null">
        extract_limit,
      </if>
      <if test="recommendCoin != null">
        recommend_coin,
      </if>
      <if test="recommendedCoin != null">
        recommended_coin,
      </if>
      <if test="recommendTimes != null">
        recommend_times,
      </if>
      <if test="recommendLimit != null">
        recommend_limit,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityName != null">
        #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="shareTitle != null">
        #{shareTitle,jdbcType=VARCHAR},
      </if>
      <if test="shareImage != null">
        #{shareImage,jdbcType=VARCHAR},
      </if>
      <if test="shareContext != null">
        #{shareContext,jdbcType=VARCHAR},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=INTEGER},
      </if>
      <if test="gold != null">
        #{gold,jdbcType=INTEGER},
      </if>
      <if test="extractTimes != null">
        #{extractTimes,jdbcType=INTEGER},
      </if>
      <if test="extractLimit != null">
        #{extractLimit,jdbcType=INTEGER},
      </if>
      <if test="recommendCoin != null">
        #{recommendCoin,jdbcType=INTEGER},
      </if>
      <if test="recommendedCoin != null">
        #{recommendedCoin,jdbcType=INTEGER},
      </if>
      <if test="recommendTimes != null">
        #{recommendTimes,jdbcType=INTEGER},
      </if>
      <if test="recommendLimit != null">
        #{recommendLimit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsl.malluserdb.po.InteractionActivityExample" resultType="java.lang.Long">
    select count(*) from interaction_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update interaction_activity
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.activityName != null">
        activity_name = #{record.activityName,jdbcType=VARCHAR},
      </if>
      <if test="record.shareTitle != null">
        share_title = #{record.shareTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.shareImage != null">
        share_image = #{record.shareImage,jdbcType=VARCHAR},
      </if>
      <if test="record.shareContext != null">
        share_context = #{record.shareContext,jdbcType=VARCHAR},
      </if>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=INTEGER},
      </if>
      <if test="record.gold != null">
        gold = #{record.gold,jdbcType=INTEGER},
      </if>
      <if test="record.extractTimes != null">
        extract_times = #{record.extractTimes,jdbcType=INTEGER},
      </if>
      <if test="record.extractLimit != null">
        extract_limit = #{record.extractLimit,jdbcType=INTEGER},
      </if>
      <if test="record.recommendCoin != null">
        recommend_coin = #{record.recommendCoin,jdbcType=INTEGER},
      </if>
      <if test="record.recommendedCoin != null">
        recommended_coin = #{record.recommendedCoin,jdbcType=INTEGER},
      </if>
      <if test="record.recommendTimes != null">
        recommend_times = #{record.recommendTimes,jdbcType=INTEGER},
      </if>
      <if test="record.recommendLimit != null">
        recommend_limit = #{record.recommendLimit,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update interaction_activity
    set id = #{record.id,jdbcType=INTEGER},
      activity_name = #{record.activityName,jdbcType=VARCHAR},
      share_title = #{record.shareTitle,jdbcType=VARCHAR},
      share_image = #{record.shareImage,jdbcType=VARCHAR},
      share_context = #{record.shareContext,jdbcType=VARCHAR},
      coin = #{record.coin,jdbcType=INTEGER},
      gold = #{record.gold,jdbcType=INTEGER},
      extract_times = #{record.extractTimes,jdbcType=INTEGER},
      extract_limit = #{record.extractLimit,jdbcType=INTEGER},
      recommend_coin = #{record.recommendCoin,jdbcType=INTEGER},
      recommended_coin = #{record.recommendedCoin,jdbcType=INTEGER},
      recommend_times = #{record.recommendTimes,jdbcType=INTEGER},
      recommend_limit = #{record.recommendLimit,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update interaction_activity
    set id = #{record.id,jdbcType=INTEGER},
      activity_name = #{record.activityName,jdbcType=VARCHAR},
      share_title = #{record.shareTitle,jdbcType=VARCHAR},
      share_image = #{record.shareImage,jdbcType=VARCHAR},
      share_context = #{record.shareContext,jdbcType=VARCHAR},
      coin = #{record.coin,jdbcType=INTEGER},
      gold = #{record.gold,jdbcType=INTEGER},
      extract_times = #{record.extractTimes,jdbcType=INTEGER},
      extract_limit = #{record.extractLimit,jdbcType=INTEGER},
      recommend_coin = #{record.recommendCoin,jdbcType=INTEGER},
      recommended_coin = #{record.recommendedCoin,jdbcType=INTEGER},
      recommend_times = #{record.recommendTimes,jdbcType=INTEGER},
      recommend_limit = #{record.recommendLimit,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsl.malluserdb.po.InteractionActivity">
    update interaction_activity
    <set>
      <if test="activityName != null">
        activity_name = #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="shareTitle != null">
        share_title = #{shareTitle,jdbcType=VARCHAR},
      </if>
      <if test="shareImage != null">
        share_image = #{shareImage,jdbcType=VARCHAR},
      </if>
      <if test="shareContext != null">
        share_context = #{shareContext,jdbcType=VARCHAR},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=INTEGER},
      </if>
      <if test="gold != null">
        gold = #{gold,jdbcType=INTEGER},
      </if>
      <if test="extractTimes != null">
        extract_times = #{extractTimes,jdbcType=INTEGER},
      </if>
      <if test="extractLimit != null">
        extract_limit = #{extractLimit,jdbcType=INTEGER},
      </if>
      <if test="recommendCoin != null">
        recommend_coin = #{recommendCoin,jdbcType=INTEGER},
      </if>
      <if test="recommendedCoin != null">
        recommended_coin = #{recommendedCoin,jdbcType=INTEGER},
      </if>
      <if test="recommendTimes != null">
        recommend_times = #{recommendTimes,jdbcType=INTEGER},
      </if>
      <if test="recommendLimit != null">
        recommend_limit = #{recommendLimit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zsl.malluserdb.po.InteractionActivity">
    update interaction_activity
    set activity_name = #{activityName,jdbcType=VARCHAR},
      share_title = #{shareTitle,jdbcType=VARCHAR},
      share_image = #{shareImage,jdbcType=VARCHAR},
      share_context = #{shareContext,jdbcType=VARCHAR},
      coin = #{coin,jdbcType=INTEGER},
      gold = #{gold,jdbcType=INTEGER},
      extract_times = #{extractTimes,jdbcType=INTEGER},
      extract_limit = #{extractLimit,jdbcType=INTEGER},
      recommend_coin = #{recommendCoin,jdbcType=INTEGER},
      recommended_coin = #{recommendedCoin,jdbcType=INTEGER},
      recommend_times = #{recommendTimes,jdbcType=INTEGER},
      recommend_limit = #{recommendLimit,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsl.malluserdb.po.InteractionActivity">
    update interaction_activity
    set activity_name = #{activityName,jdbcType=VARCHAR},
      share_title = #{shareTitle,jdbcType=VARCHAR},
      share_image = #{shareImage,jdbcType=VARCHAR},
      share_context = #{shareContext,jdbcType=VARCHAR},
      coin = #{coin,jdbcType=INTEGER},
      gold = #{gold,jdbcType=INTEGER},
      extract_times = #{extractTimes,jdbcType=INTEGER},
      extract_limit = #{extractLimit,jdbcType=INTEGER},
      recommend_coin = #{recommendCoin,jdbcType=INTEGER},
      recommended_coin = #{recommendedCoin,jdbcType=INTEGER},
      recommend_times = #{recommendTimes,jdbcType=INTEGER},
      recommend_limit = #{recommendLimit,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.zsl.malluserdb.po.InteractionActivityExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from interaction_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.zsl.malluserdb.po.InteractionActivityExample" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from interaction_activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from interaction_activity
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>