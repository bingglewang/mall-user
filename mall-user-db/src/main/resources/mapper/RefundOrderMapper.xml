<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.malluserdb.mapper.RefundOrderMapper">
  <resultMap id="BaseResultMap" type="com.zsl.malluserdb.po.RefundOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="refund_trade_no" jdbcType="VARCHAR" property="refundTradeNo" />
    <result column="refund_out_trade_no" jdbcType="VARCHAR" property="refundOutTradeNo" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="refund_total_amount" jdbcType="DECIMAL" property="refundTotalAmount" />
    <result column="reality_refund_total_amout" jdbcType="DECIMAL" property="realityRefundTotalAmout" />
    <result column="refund_total_coin" jdbcType="INTEGER" property="refundTotalCoin" />
    <result column="reality_refund_total_coin" jdbcType="INTEGER" property="realityRefundTotalCoin" />
    <result column="regain_total_coin" jdbcType="INTEGER" property="regainTotalCoin" />
    <result column="reality_regain_total_coin" jdbcType="INTEGER" property="realityRegainTotalCoin" />
    <result column="regain_father_total_coin" jdbcType="INTEGER" property="regainFatherTotalCoin" />
    <result column="reality_regain_father_total_coin" jdbcType="INTEGER" property="realityRegainFatherTotalCoin" />
    <result column="regain_grandfather_total_coin" jdbcType="INTEGER" property="regainGrandfatherTotalCoin" />
    <result column="reality_regain_grandfather_total_coin" jdbcType="INTEGER" property="realityRegainGrandfatherTotalCoin" />
    <result column="regain_total_amount" jdbcType="DECIMAL" property="regainTotalAmount" />
    <result column="reality_regain_total_amount" jdbcType="DECIMAL" property="realityRegainTotalAmount" />
    <result column="regain_father_total_amount" jdbcType="DECIMAL" property="regainFatherTotalAmount" />
    <result column="reality_regain_father_total_amount" jdbcType="DECIMAL" property="realityRegainFatherTotalAmount" />
    <result column="regain_grandfather_total_amount" jdbcType="DECIMAL" property="regainGrandfatherTotalAmount" />
    <result column="reality_regain_grandfather_total_amount" jdbcType="DECIMAL" property="realityRegainGrandfatherTotalAmount" />
    <result column="regain_reducion" jdbcType="DECIMAL" property="regainReducion" />
    <result column="reality_regain_reducion" jdbcType="DECIMAL" property="realityRegainReducion" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="allow_time" jdbcType="TIMESTAMP" property="allowTime" />
    <result column="pass_time" jdbcType="TIMESTAMP" property="passTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="refund_reason" jdbcType="VARCHAR" property="refundReason" />
    <result column="refund_description" jdbcType="VARCHAR" property="refundDescription" />
    <result column="refund_images" jdbcType="VARCHAR" property="refundImages" />
    <result column="refund_type" jdbcType="INTEGER" property="refundType" />
    <result column="refund_status" jdbcType="TINYINT" property="refundStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, refund_trade_no, refund_out_trade_no, order_no, refund_total_amount, reality_refund_total_amout, 
    refund_total_coin, reality_refund_total_coin, regain_total_coin, reality_regain_total_coin, 
    regain_father_total_coin, reality_regain_father_total_coin, regain_grandfather_total_coin, 
    reality_regain_grandfather_total_coin, regain_total_amount, reality_regain_total_amount, 
    regain_father_total_amount, reality_regain_father_total_amount, regain_grandfather_total_amount, 
    reality_regain_grandfather_total_amount, regain_reducion, reality_regain_reducion, 
    apply_time, allow_time, pass_time, finish_time, refund_reason, refund_description, 
    refund_images, refund_type, refund_status
  </sql>
  <select id="selectByExample" parameterType="com.zsl.malluserdb.po.RefundOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from refund_order
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from refund_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from refund_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from refund_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsl.malluserdb.po.RefundOrderExample">
    delete from refund_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsl.malluserdb.po.RefundOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into refund_order (refund_trade_no, refund_out_trade_no, 
      order_no, refund_total_amount, reality_refund_total_amout, 
      refund_total_coin, reality_refund_total_coin, 
      regain_total_coin, reality_regain_total_coin, 
      regain_father_total_coin, reality_regain_father_total_coin, 
      regain_grandfather_total_coin, reality_regain_grandfather_total_coin, 
      regain_total_amount, reality_regain_total_amount, 
      regain_father_total_amount, reality_regain_father_total_amount, 
      regain_grandfather_total_amount, reality_regain_grandfather_total_amount, 
      regain_reducion, reality_regain_reducion, 
      apply_time, allow_time, pass_time, 
      finish_time, refund_reason, refund_description, 
      refund_images, refund_type, refund_status
      )
    values (#{refundTradeNo,jdbcType=VARCHAR}, #{refundOutTradeNo,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{refundTotalAmount,jdbcType=DECIMAL}, #{realityRefundTotalAmout,jdbcType=DECIMAL}, 
      #{refundTotalCoin,jdbcType=INTEGER}, #{realityRefundTotalCoin,jdbcType=INTEGER}, 
      #{regainTotalCoin,jdbcType=INTEGER}, #{realityRegainTotalCoin,jdbcType=INTEGER}, 
      #{regainFatherTotalCoin,jdbcType=INTEGER}, #{realityRegainFatherTotalCoin,jdbcType=INTEGER}, 
      #{regainGrandfatherTotalCoin,jdbcType=INTEGER}, #{realityRegainGrandfatherTotalCoin,jdbcType=INTEGER}, 
      #{regainTotalAmount,jdbcType=DECIMAL}, #{realityRegainTotalAmount,jdbcType=DECIMAL}, 
      #{regainFatherTotalAmount,jdbcType=DECIMAL}, #{realityRegainFatherTotalAmount,jdbcType=DECIMAL}, 
      #{regainGrandfatherTotalAmount,jdbcType=DECIMAL}, #{realityRegainGrandfatherTotalAmount,jdbcType=DECIMAL}, 
      #{regainReducion,jdbcType=DECIMAL}, #{realityRegainReducion,jdbcType=DECIMAL}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{allowTime,jdbcType=TIMESTAMP}, #{passTime,jdbcType=TIMESTAMP}, 
      #{finishTime,jdbcType=TIMESTAMP}, #{refundReason,jdbcType=VARCHAR}, #{refundDescription,jdbcType=VARCHAR}, 
      #{refundImages,jdbcType=VARCHAR}, #{refundType,jdbcType=INTEGER}, #{refundStatus,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zsl.malluserdb.po.RefundOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into refund_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refundTradeNo != null">
        refund_trade_no,
      </if>
      <if test="refundOutTradeNo != null">
        refund_out_trade_no,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="refundTotalAmount != null">
        refund_total_amount,
      </if>
      <if test="realityRefundTotalAmout != null">
        reality_refund_total_amout,
      </if>
      <if test="refundTotalCoin != null">
        refund_total_coin,
      </if>
      <if test="realityRefundTotalCoin != null">
        reality_refund_total_coin,
      </if>
      <if test="regainTotalCoin != null">
        regain_total_coin,
      </if>
      <if test="realityRegainTotalCoin != null">
        reality_regain_total_coin,
      </if>
      <if test="regainFatherTotalCoin != null">
        regain_father_total_coin,
      </if>
      <if test="realityRegainFatherTotalCoin != null">
        reality_regain_father_total_coin,
      </if>
      <if test="regainGrandfatherTotalCoin != null">
        regain_grandfather_total_coin,
      </if>
      <if test="realityRegainGrandfatherTotalCoin != null">
        reality_regain_grandfather_total_coin,
      </if>
      <if test="regainTotalAmount != null">
        regain_total_amount,
      </if>
      <if test="realityRegainTotalAmount != null">
        reality_regain_total_amount,
      </if>
      <if test="regainFatherTotalAmount != null">
        regain_father_total_amount,
      </if>
      <if test="realityRegainFatherTotalAmount != null">
        reality_regain_father_total_amount,
      </if>
      <if test="regainGrandfatherTotalAmount != null">
        regain_grandfather_total_amount,
      </if>
      <if test="realityRegainGrandfatherTotalAmount != null">
        reality_regain_grandfather_total_amount,
      </if>
      <if test="regainReducion != null">
        regain_reducion,
      </if>
      <if test="realityRegainReducion != null">
        reality_regain_reducion,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="allowTime != null">
        allow_time,
      </if>
      <if test="passTime != null">
        pass_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="refundReason != null">
        refund_reason,
      </if>
      <if test="refundDescription != null">
        refund_description,
      </if>
      <if test="refundImages != null">
        refund_images,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refundTradeNo != null">
        #{refundTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundOutTradeNo != null">
        #{refundOutTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTotalAmount != null">
        #{refundTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRefundTotalAmout != null">
        #{realityRefundTotalAmout,jdbcType=DECIMAL},
      </if>
      <if test="refundTotalCoin != null">
        #{refundTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRefundTotalCoin != null">
        #{realityRefundTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainTotalCoin != null">
        #{regainTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRegainTotalCoin != null">
        #{realityRegainTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainFatherTotalCoin != null">
        #{regainFatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRegainFatherTotalCoin != null">
        #{realityRegainFatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainGrandfatherTotalCoin != null">
        #{regainGrandfatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRegainGrandfatherTotalCoin != null">
        #{realityRegainGrandfatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainTotalAmount != null">
        #{regainTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainTotalAmount != null">
        #{realityRegainTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="regainFatherTotalAmount != null">
        #{regainFatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainFatherTotalAmount != null">
        #{realityRegainFatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="regainGrandfatherTotalAmount != null">
        #{regainGrandfatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainGrandfatherTotalAmount != null">
        #{realityRegainGrandfatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="regainReducion != null">
        #{regainReducion,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainReducion != null">
        #{realityRegainReducion,jdbcType=DECIMAL},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allowTime != null">
        #{allowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passTime != null">
        #{passTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundReason != null">
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundDescription != null">
        #{refundDescription,jdbcType=VARCHAR},
      </if>
      <if test="refundImages != null">
        #{refundImages,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsl.malluserdb.po.RefundOrderExample" resultType="java.lang.Long">
    select count(*) from refund_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update refund_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.refundTradeNo != null">
        refund_trade_no = #{record.refundTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundOutTradeNo != null">
        refund_out_trade_no = #{record.refundOutTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTotalAmount != null">
        refund_total_amount = #{record.refundTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.realityRefundTotalAmout != null">
        reality_refund_total_amout = #{record.realityRefundTotalAmout,jdbcType=DECIMAL},
      </if>
      <if test="record.refundTotalCoin != null">
        refund_total_coin = #{record.refundTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.realityRefundTotalCoin != null">
        reality_refund_total_coin = #{record.realityRefundTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.regainTotalCoin != null">
        regain_total_coin = #{record.regainTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.realityRegainTotalCoin != null">
        reality_regain_total_coin = #{record.realityRegainTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.regainFatherTotalCoin != null">
        regain_father_total_coin = #{record.regainFatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.realityRegainFatherTotalCoin != null">
        reality_regain_father_total_coin = #{record.realityRegainFatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.regainGrandfatherTotalCoin != null">
        regain_grandfather_total_coin = #{record.regainGrandfatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.realityRegainGrandfatherTotalCoin != null">
        reality_regain_grandfather_total_coin = #{record.realityRegainGrandfatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.regainTotalAmount != null">
        regain_total_amount = #{record.regainTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.realityRegainTotalAmount != null">
        reality_regain_total_amount = #{record.realityRegainTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.regainFatherTotalAmount != null">
        regain_father_total_amount = #{record.regainFatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.realityRegainFatherTotalAmount != null">
        reality_regain_father_total_amount = #{record.realityRegainFatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.regainGrandfatherTotalAmount != null">
        regain_grandfather_total_amount = #{record.regainGrandfatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.realityRegainGrandfatherTotalAmount != null">
        reality_regain_grandfather_total_amount = #{record.realityRegainGrandfatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.regainReducion != null">
        regain_reducion = #{record.regainReducion,jdbcType=DECIMAL},
      </if>
      <if test="record.realityRegainReducion != null">
        reality_regain_reducion = #{record.realityRegainReducion,jdbcType=DECIMAL},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allowTime != null">
        allow_time = #{record.allowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passTime != null">
        pass_time = #{record.passTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundReason != null">
        refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      </if>
      <if test="record.refundDescription != null">
        refund_description = #{record.refundDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.refundImages != null">
        refund_images = #{record.refundImages,jdbcType=VARCHAR},
      </if>
      <if test="record.refundType != null">
        refund_type = #{record.refundType,jdbcType=INTEGER},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update refund_order
    set id = #{record.id,jdbcType=INTEGER},
      refund_trade_no = #{record.refundTradeNo,jdbcType=VARCHAR},
      refund_out_trade_no = #{record.refundOutTradeNo,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      refund_total_amount = #{record.refundTotalAmount,jdbcType=DECIMAL},
      reality_refund_total_amout = #{record.realityRefundTotalAmout,jdbcType=DECIMAL},
      refund_total_coin = #{record.refundTotalCoin,jdbcType=INTEGER},
      reality_refund_total_coin = #{record.realityRefundTotalCoin,jdbcType=INTEGER},
      regain_total_coin = #{record.regainTotalCoin,jdbcType=INTEGER},
      reality_regain_total_coin = #{record.realityRegainTotalCoin,jdbcType=INTEGER},
      regain_father_total_coin = #{record.regainFatherTotalCoin,jdbcType=INTEGER},
      reality_regain_father_total_coin = #{record.realityRegainFatherTotalCoin,jdbcType=INTEGER},
      regain_grandfather_total_coin = #{record.regainGrandfatherTotalCoin,jdbcType=INTEGER},
      reality_regain_grandfather_total_coin = #{record.realityRegainGrandfatherTotalCoin,jdbcType=INTEGER},
      regain_total_amount = #{record.regainTotalAmount,jdbcType=DECIMAL},
      reality_regain_total_amount = #{record.realityRegainTotalAmount,jdbcType=DECIMAL},
      regain_father_total_amount = #{record.regainFatherTotalAmount,jdbcType=DECIMAL},
      reality_regain_father_total_amount = #{record.realityRegainFatherTotalAmount,jdbcType=DECIMAL},
      regain_grandfather_total_amount = #{record.regainGrandfatherTotalAmount,jdbcType=DECIMAL},
      reality_regain_grandfather_total_amount = #{record.realityRegainGrandfatherTotalAmount,jdbcType=DECIMAL},
      regain_reducion = #{record.regainReducion,jdbcType=DECIMAL},
      reality_regain_reducion = #{record.realityRegainReducion,jdbcType=DECIMAL},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      allow_time = #{record.allowTime,jdbcType=TIMESTAMP},
      pass_time = #{record.passTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      refund_description = #{record.refundDescription,jdbcType=VARCHAR},
      refund_images = #{record.refundImages,jdbcType=VARCHAR},
      refund_type = #{record.refundType,jdbcType=INTEGER},
      refund_status = #{record.refundStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsl.malluserdb.po.RefundOrder">
    update refund_order
    <set>
      <if test="refundTradeNo != null">
        refund_trade_no = #{refundTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundOutTradeNo != null">
        refund_out_trade_no = #{refundOutTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTotalAmount != null">
        refund_total_amount = #{refundTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRefundTotalAmout != null">
        reality_refund_total_amout = #{realityRefundTotalAmout,jdbcType=DECIMAL},
      </if>
      <if test="refundTotalCoin != null">
        refund_total_coin = #{refundTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRefundTotalCoin != null">
        reality_refund_total_coin = #{realityRefundTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainTotalCoin != null">
        regain_total_coin = #{regainTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRegainTotalCoin != null">
        reality_regain_total_coin = #{realityRegainTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainFatherTotalCoin != null">
        regain_father_total_coin = #{regainFatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRegainFatherTotalCoin != null">
        reality_regain_father_total_coin = #{realityRegainFatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainGrandfatherTotalCoin != null">
        regain_grandfather_total_coin = #{regainGrandfatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="realityRegainGrandfatherTotalCoin != null">
        reality_regain_grandfather_total_coin = #{realityRegainGrandfatherTotalCoin,jdbcType=INTEGER},
      </if>
      <if test="regainTotalAmount != null">
        regain_total_amount = #{regainTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainTotalAmount != null">
        reality_regain_total_amount = #{realityRegainTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="regainFatherTotalAmount != null">
        regain_father_total_amount = #{regainFatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainFatherTotalAmount != null">
        reality_regain_father_total_amount = #{realityRegainFatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="regainGrandfatherTotalAmount != null">
        regain_grandfather_total_amount = #{regainGrandfatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainGrandfatherTotalAmount != null">
        reality_regain_grandfather_total_amount = #{realityRegainGrandfatherTotalAmount,jdbcType=DECIMAL},
      </if>
      <if test="regainReducion != null">
        regain_reducion = #{regainReducion,jdbcType=DECIMAL},
      </if>
      <if test="realityRegainReducion != null">
        reality_regain_reducion = #{realityRegainReducion,jdbcType=DECIMAL},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allowTime != null">
        allow_time = #{allowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passTime != null">
        pass_time = #{passTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundReason != null">
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundDescription != null">
        refund_description = #{refundDescription,jdbcType=VARCHAR},
      </if>
      <if test="refundImages != null">
        refund_images = #{refundImages,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsl.malluserdb.po.RefundOrder">
    update refund_order
    set refund_trade_no = #{refundTradeNo,jdbcType=VARCHAR},
      refund_out_trade_no = #{refundOutTradeNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      refund_total_amount = #{refundTotalAmount,jdbcType=DECIMAL},
      reality_refund_total_amout = #{realityRefundTotalAmout,jdbcType=DECIMAL},
      refund_total_coin = #{refundTotalCoin,jdbcType=INTEGER},
      reality_refund_total_coin = #{realityRefundTotalCoin,jdbcType=INTEGER},
      regain_total_coin = #{regainTotalCoin,jdbcType=INTEGER},
      reality_regain_total_coin = #{realityRegainTotalCoin,jdbcType=INTEGER},
      regain_father_total_coin = #{regainFatherTotalCoin,jdbcType=INTEGER},
      reality_regain_father_total_coin = #{realityRegainFatherTotalCoin,jdbcType=INTEGER},
      regain_grandfather_total_coin = #{regainGrandfatherTotalCoin,jdbcType=INTEGER},
      reality_regain_grandfather_total_coin = #{realityRegainGrandfatherTotalCoin,jdbcType=INTEGER},
      regain_total_amount = #{regainTotalAmount,jdbcType=DECIMAL},
      reality_regain_total_amount = #{realityRegainTotalAmount,jdbcType=DECIMAL},
      regain_father_total_amount = #{regainFatherTotalAmount,jdbcType=DECIMAL},
      reality_regain_father_total_amount = #{realityRegainFatherTotalAmount,jdbcType=DECIMAL},
      regain_grandfather_total_amount = #{regainGrandfatherTotalAmount,jdbcType=DECIMAL},
      reality_regain_grandfather_total_amount = #{realityRegainGrandfatherTotalAmount,jdbcType=DECIMAL},
      regain_reducion = #{regainReducion,jdbcType=DECIMAL},
      reality_regain_reducion = #{realityRegainReducion,jdbcType=DECIMAL},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      allow_time = #{allowTime,jdbcType=TIMESTAMP},
      pass_time = #{passTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      refund_description = #{refundDescription,jdbcType=VARCHAR},
      refund_images = #{refundImages,jdbcType=VARCHAR},
      refund_type = #{refundType,jdbcType=INTEGER},
      refund_status = #{refundStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.zsl.malluserdb.po.RefundOrderExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from refund_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from refund_order
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>