<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.malluserdb.mapper.GoodsTradeInfoMapper">
  <resultMap id="BaseResultMap" type="com.zsl.malluserdb.po.GoodsTradeInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="pay_way" jdbcType="TINYINT" property="payWay" />
    <result column="source" jdbcType="BIT" property="source" />
    <result column="pre_status" jdbcType="TINYINT" property="preStatus" />
    <result column="current_status" jdbcType="TINYINT" property="currentStatus" />
    <result column="evaluate" jdbcType="BIT" property="evaluate" />
    <result column="total_amount" jdbcType="REAL" property="totalAmount" />
    <result column="freight_charge" jdbcType="DECIMAL" property="freightCharge" />
    <result column="money_off" jdbcType="DECIMAL" property="moneyOff" />
    <result column="total_deduction" jdbcType="DECIMAL" property="totalDeduction" />
    <result column="total_count" jdbcType="INTEGER" property="totalCount" />
    <result column="total_point" jdbcType="INTEGER" property="totalPoint" />
    <result column="total_coin" jdbcType="INTEGER" property="totalCoin" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="trade_time" jdbcType="TIMESTAMP" property="tradeTime" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="shipments_time" jdbcType="TIMESTAMP" property="shipmentsTime" />
    <result column="hidden" jdbcType="BIT" property="hidden" />
    <result column="recipients" jdbcType="VARCHAR" property="recipients" />
    <result column="recipients_phone" jdbcType="VARCHAR" property="recipientsPhone" />
    <result column="shipping_address" jdbcType="VARCHAR" property="shippingAddress" />
    <result column="shipping_address_detail" jdbcType="VARCHAR" property="shippingAddressDetail" />
    <result column="present_money" jdbcType="DECIMAL" property="presentMoney" />
    <result column="father_money" jdbcType="DECIMAL" property="fatherMoney" />
    <result column="grandfather_money" jdbcType="DECIMAL" property="grandfatherMoney" />
    <result column="father_coin" jdbcType="INTEGER" property="fatherCoin" />
    <result column="grandfather_coin" jdbcType="INTEGER" property="grandfatherCoin" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, trade_no, out_trade_no, member_id, address_id, pay_way, `source`, pre_status, 
    current_status, evaluate, total_amount, freight_charge, money_off, total_deduction, 
    total_count, total_point, total_coin, remark, trade_time, payment_time, finish_time, 
    end_time, shipments_time, hidden, recipients, recipients_phone, shipping_address, 
    shipping_address_detail, present_money, father_money, grandfather_money, father_coin, 
    grandfather_coin
  </sql>
  <select id="selectByExample" parameterType="com.zsl.malluserdb.po.GoodsTradeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_trade_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from goods_trade_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_trade_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from goods_trade_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_trade_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsl.malluserdb.po.GoodsTradeInfoExample">
    delete from goods_trade_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsl.malluserdb.po.GoodsTradeInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods_trade_info (trade_no, out_trade_no, member_id, 
      address_id, pay_way, `source`, 
      pre_status, current_status, evaluate, 
      total_amount, freight_charge, money_off, 
      total_deduction, total_count, total_point, 
      total_coin, remark, trade_time, 
      payment_time, finish_time, end_time, 
      shipments_time, hidden, recipients, 
      recipients_phone, shipping_address, shipping_address_detail, 
      present_money, father_money, grandfather_money, 
      father_coin, grandfather_coin)
    values (#{tradeNo,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, 
      #{addressId,jdbcType=INTEGER}, #{payWay,jdbcType=TINYINT}, #{source,jdbcType=BIT}, 
      #{preStatus,jdbcType=TINYINT}, #{currentStatus,jdbcType=TINYINT}, #{evaluate,jdbcType=BIT}, 
      #{totalAmount,jdbcType=REAL}, #{freightCharge,jdbcType=DECIMAL}, #{moneyOff,jdbcType=DECIMAL}, 
      #{totalDeduction,jdbcType=DECIMAL}, #{totalCount,jdbcType=INTEGER}, #{totalPoint,jdbcType=INTEGER}, 
      #{totalCoin,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{tradeTime,jdbcType=TIMESTAMP}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{shipmentsTime,jdbcType=TIMESTAMP}, #{hidden,jdbcType=BIT}, #{recipients,jdbcType=VARCHAR}, 
      #{recipientsPhone,jdbcType=VARCHAR}, #{shippingAddress,jdbcType=VARCHAR}, #{shippingAddressDetail,jdbcType=VARCHAR}, 
      #{presentMoney,jdbcType=DECIMAL}, #{fatherMoney,jdbcType=DECIMAL}, #{grandfatherMoney,jdbcType=DECIMAL}, 
      #{fatherCoin,jdbcType=INTEGER}, #{grandfatherCoin,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zsl.malluserdb.po.GoodsTradeInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods_trade_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="payWay != null">
        pay_way,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="preStatus != null">
        pre_status,
      </if>
      <if test="currentStatus != null">
        current_status,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="freightCharge != null">
        freight_charge,
      </if>
      <if test="moneyOff != null">
        money_off,
      </if>
      <if test="totalDeduction != null">
        total_deduction,
      </if>
      <if test="totalCount != null">
        total_count,
      </if>
      <if test="totalPoint != null">
        total_point,
      </if>
      <if test="totalCoin != null">
        total_coin,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="tradeTime != null">
        trade_time,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="shipmentsTime != null">
        shipments_time,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="recipients != null">
        recipients,
      </if>
      <if test="recipientsPhone != null">
        recipients_phone,
      </if>
      <if test="shippingAddress != null">
        shipping_address,
      </if>
      <if test="shippingAddressDetail != null">
        shipping_address_detail,
      </if>
      <if test="presentMoney != null">
        present_money,
      </if>
      <if test="fatherMoney != null">
        father_money,
      </if>
      <if test="grandfatherMoney != null">
        grandfather_money,
      </if>
      <if test="fatherCoin != null">
        father_coin,
      </if>
      <if test="grandfatherCoin != null">
        grandfather_coin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="payWay != null">
        #{payWay,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=BIT},
      </if>
      <if test="preStatus != null">
        #{preStatus,jdbcType=TINYINT},
      </if>
      <if test="currentStatus != null">
        #{currentStatus,jdbcType=TINYINT},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=BIT},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=REAL},
      </if>
      <if test="freightCharge != null">
        #{freightCharge,jdbcType=DECIMAL},
      </if>
      <if test="moneyOff != null">
        #{moneyOff,jdbcType=DECIMAL},
      </if>
      <if test="totalDeduction != null">
        #{totalDeduction,jdbcType=DECIMAL},
      </if>
      <if test="totalCount != null">
        #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="totalPoint != null">
        #{totalPoint,jdbcType=INTEGER},
      </if>
      <if test="totalCoin != null">
        #{totalCoin,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tradeTime != null">
        #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipmentsTime != null">
        #{shipmentsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hidden != null">
        #{hidden,jdbcType=BIT},
      </if>
      <if test="recipients != null">
        #{recipients,jdbcType=VARCHAR},
      </if>
      <if test="recipientsPhone != null">
        #{recipientsPhone,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddress != null">
        #{shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddressDetail != null">
        #{shippingAddressDetail,jdbcType=VARCHAR},
      </if>
      <if test="presentMoney != null">
        #{presentMoney,jdbcType=DECIMAL},
      </if>
      <if test="fatherMoney != null">
        #{fatherMoney,jdbcType=DECIMAL},
      </if>
      <if test="grandfatherMoney != null">
        #{grandfatherMoney,jdbcType=DECIMAL},
      </if>
      <if test="fatherCoin != null">
        #{fatherCoin,jdbcType=INTEGER},
      </if>
      <if test="grandfatherCoin != null">
        #{grandfatherCoin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsl.malluserdb.po.GoodsTradeInfoExample" resultType="java.lang.Long">
    select count(*) from goods_trade_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_trade_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.payWay != null">
        pay_way = #{record.payWay,jdbcType=TINYINT},
      </if>
      <if test="record.source != null">
        `source` = #{record.source,jdbcType=BIT},
      </if>
      <if test="record.preStatus != null">
        pre_status = #{record.preStatus,jdbcType=TINYINT},
      </if>
      <if test="record.currentStatus != null">
        current_status = #{record.currentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.evaluate != null">
        evaluate = #{record.evaluate,jdbcType=BIT},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=REAL},
      </if>
      <if test="record.freightCharge != null">
        freight_charge = #{record.freightCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.moneyOff != null">
        money_off = #{record.moneyOff,jdbcType=DECIMAL},
      </if>
      <if test="record.totalDeduction != null">
        total_deduction = #{record.totalDeduction,jdbcType=DECIMAL},
      </if>
      <if test="record.totalCount != null">
        total_count = #{record.totalCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalPoint != null">
        total_point = #{record.totalPoint,jdbcType=INTEGER},
      </if>
      <if test="record.totalCoin != null">
        total_coin = #{record.totalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeTime != null">
        trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shipmentsTime != null">
        shipments_time = #{record.shipmentsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hidden != null">
        hidden = #{record.hidden,jdbcType=BIT},
      </if>
      <if test="record.recipients != null">
        recipients = #{record.recipients,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientsPhone != null">
        recipients_phone = #{record.recipientsPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingAddress != null">
        shipping_address = #{record.shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingAddressDetail != null">
        shipping_address_detail = #{record.shippingAddressDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.presentMoney != null">
        present_money = #{record.presentMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.fatherMoney != null">
        father_money = #{record.fatherMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.grandfatherMoney != null">
        grandfather_money = #{record.grandfatherMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.fatherCoin != null">
        father_coin = #{record.fatherCoin,jdbcType=INTEGER},
      </if>
      <if test="record.grandfatherCoin != null">
        grandfather_coin = #{record.grandfatherCoin,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_trade_info
    set id = #{record.id,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      pay_way = #{record.payWay,jdbcType=TINYINT},
      `source` = #{record.source,jdbcType=BIT},
      pre_status = #{record.preStatus,jdbcType=TINYINT},
      current_status = #{record.currentStatus,jdbcType=TINYINT},
      evaluate = #{record.evaluate,jdbcType=BIT},
      total_amount = #{record.totalAmount,jdbcType=REAL},
      freight_charge = #{record.freightCharge,jdbcType=DECIMAL},
      money_off = #{record.moneyOff,jdbcType=DECIMAL},
      total_deduction = #{record.totalDeduction,jdbcType=DECIMAL},
      total_count = #{record.totalCount,jdbcType=INTEGER},
      total_point = #{record.totalPoint,jdbcType=INTEGER},
      total_coin = #{record.totalCoin,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      shipments_time = #{record.shipmentsTime,jdbcType=TIMESTAMP},
      hidden = #{record.hidden,jdbcType=BIT},
      recipients = #{record.recipients,jdbcType=VARCHAR},
      recipients_phone = #{record.recipientsPhone,jdbcType=VARCHAR},
      shipping_address = #{record.shippingAddress,jdbcType=VARCHAR},
      shipping_address_detail = #{record.shippingAddressDetail,jdbcType=VARCHAR},
      present_money = #{record.presentMoney,jdbcType=DECIMAL},
      father_money = #{record.fatherMoney,jdbcType=DECIMAL},
      grandfather_money = #{record.grandfatherMoney,jdbcType=DECIMAL},
      father_coin = #{record.fatherCoin,jdbcType=INTEGER},
      grandfather_coin = #{record.grandfatherCoin,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsl.malluserdb.po.GoodsTradeInfo">
    update goods_trade_info
    <set>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="payWay != null">
        pay_way = #{payWay,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        `source` = #{source,jdbcType=BIT},
      </if>
      <if test="preStatus != null">
        pre_status = #{preStatus,jdbcType=TINYINT},
      </if>
      <if test="currentStatus != null">
        current_status = #{currentStatus,jdbcType=TINYINT},
      </if>
      <if test="evaluate != null">
        evaluate = #{evaluate,jdbcType=BIT},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=REAL},
      </if>
      <if test="freightCharge != null">
        freight_charge = #{freightCharge,jdbcType=DECIMAL},
      </if>
      <if test="moneyOff != null">
        money_off = #{moneyOff,jdbcType=DECIMAL},
      </if>
      <if test="totalDeduction != null">
        total_deduction = #{totalDeduction,jdbcType=DECIMAL},
      </if>
      <if test="totalCount != null">
        total_count = #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="totalPoint != null">
        total_point = #{totalPoint,jdbcType=INTEGER},
      </if>
      <if test="totalCoin != null">
        total_coin = #{totalCoin,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tradeTime != null">
        trade_time = #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipmentsTime != null">
        shipments_time = #{shipmentsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hidden != null">
        hidden = #{hidden,jdbcType=BIT},
      </if>
      <if test="recipients != null">
        recipients = #{recipients,jdbcType=VARCHAR},
      </if>
      <if test="recipientsPhone != null">
        recipients_phone = #{recipientsPhone,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddress != null">
        shipping_address = #{shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddressDetail != null">
        shipping_address_detail = #{shippingAddressDetail,jdbcType=VARCHAR},
      </if>
      <if test="presentMoney != null">
        present_money = #{presentMoney,jdbcType=DECIMAL},
      </if>
      <if test="fatherMoney != null">
        father_money = #{fatherMoney,jdbcType=DECIMAL},
      </if>
      <if test="grandfatherMoney != null">
        grandfather_money = #{grandfatherMoney,jdbcType=DECIMAL},
      </if>
      <if test="fatherCoin != null">
        father_coin = #{fatherCoin,jdbcType=INTEGER},
      </if>
      <if test="grandfatherCoin != null">
        grandfather_coin = #{grandfatherCoin,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsl.malluserdb.po.GoodsTradeInfo">
    update goods_trade_info
    set trade_no = #{tradeNo,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      pay_way = #{payWay,jdbcType=TINYINT},
      `source` = #{source,jdbcType=BIT},
      pre_status = #{preStatus,jdbcType=TINYINT},
      current_status = #{currentStatus,jdbcType=TINYINT},
      evaluate = #{evaluate,jdbcType=BIT},
      total_amount = #{totalAmount,jdbcType=REAL},
      freight_charge = #{freightCharge,jdbcType=DECIMAL},
      money_off = #{moneyOff,jdbcType=DECIMAL},
      total_deduction = #{totalDeduction,jdbcType=DECIMAL},
      total_count = #{totalCount,jdbcType=INTEGER},
      total_point = #{totalPoint,jdbcType=INTEGER},
      total_coin = #{totalCoin,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      trade_time = #{tradeTime,jdbcType=TIMESTAMP},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      shipments_time = #{shipmentsTime,jdbcType=TIMESTAMP},
      hidden = #{hidden,jdbcType=BIT},
      recipients = #{recipients,jdbcType=VARCHAR},
      recipients_phone = #{recipientsPhone,jdbcType=VARCHAR},
      shipping_address = #{shippingAddress,jdbcType=VARCHAR},
      shipping_address_detail = #{shippingAddressDetail,jdbcType=VARCHAR},
      present_money = #{presentMoney,jdbcType=DECIMAL},
      father_money = #{fatherMoney,jdbcType=DECIMAL},
      grandfather_money = #{grandfatherMoney,jdbcType=DECIMAL},
      father_coin = #{fatherCoin,jdbcType=INTEGER},
      grandfather_coin = #{grandfatherCoin,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.zsl.malluserdb.po.GoodsTradeInfoExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_trade_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from goods_trade_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>