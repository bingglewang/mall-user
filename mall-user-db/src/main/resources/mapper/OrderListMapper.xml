<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.malluserdb.mapper.OrderListMapper">
  <resultMap id="BaseResultMap" type="com.zsl.malluserdb.po.OrderList">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="current_status" jdbcType="TINYINT" property="currentStatus" />
    <result column="trade_amount" jdbcType="REAL" property="tradeAmount" />
    <result column="trade_count" jdbcType="INTEGER" property="tradeCount" />
    <result column="trade_point" jdbcType="INTEGER" property="tradePoint" />
    <result column="evaluate" jdbcType="BIT" property="evaluate" />
    <result column="freight_charge" jdbcType="DECIMAL" property="freightCharge" />
    <result column="trade_time" jdbcType="TIMESTAMP" property="tradeTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_evaluate" jdbcType="BIT" property="orderEvaluate" />
    <result column="current_state" jdbcType="BIT" property="currentState" />
    <result column="child_amount" jdbcType="DECIMAL" property="childAmount" />
    <result column="child_count" jdbcType="INTEGER" property="childCount" />
    <result column="child_point" jdbcType="INTEGER" property="childPoint" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="spec_value" jdbcType="VARCHAR" property="specValue" />
    <result column="spec_name" jdbcType="VARCHAR" property="specName" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="total_coin" jdbcType="INTEGER" property="totalCoin" />
    <result column="present_coin" jdbcType="INTEGER" property="presentCoin" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zsl.malluserdb.po.OrderList">
    <result column="picture_url" jdbcType="LONGVARCHAR" property="pictureUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, trade_no, member_id, current_status, trade_amount, trade_count, trade_point, 
    evaluate, freight_charge, trade_time, end_time, order_no, order_evaluate, current_state, 
    child_amount, child_count, child_point, sku_name, price, shop_name, spec_value, spec_name, 
    shop_id, sku_id, total_coin, present_coin
  </sql>
  <sql id="Blob_Column_List">
    picture_url
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zsl.malluserdb.po.OrderListExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zsl.malluserdb.po.OrderListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from order_list
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zsl.malluserdb.po.OrderListExample">
    delete from order_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsl.malluserdb.po.OrderList">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_list (trade_no, member_id, current_status, 
      trade_amount, trade_count, trade_point, 
      evaluate, freight_charge, trade_time, 
      end_time, order_no, order_evaluate, 
      current_state, child_amount, child_count, 
      child_point, sku_name, price, 
      shop_name, spec_value, spec_name, 
      shop_id, sku_id, total_coin, 
      present_coin, picture_url)
    values (#{tradeNo,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, #{currentStatus,jdbcType=TINYINT}, 
      #{tradeAmount,jdbcType=REAL}, #{tradeCount,jdbcType=INTEGER}, #{tradePoint,jdbcType=INTEGER}, 
      #{evaluate,jdbcType=BIT}, #{freightCharge,jdbcType=DECIMAL}, #{tradeTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{orderNo,jdbcType=VARCHAR}, #{orderEvaluate,jdbcType=BIT}, 
      #{currentState,jdbcType=BIT}, #{childAmount,jdbcType=DECIMAL}, #{childCount,jdbcType=INTEGER}, 
      #{childPoint,jdbcType=INTEGER}, #{skuName,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{shopName,jdbcType=VARCHAR}, #{specValue,jdbcType=VARCHAR}, #{specName,jdbcType=VARCHAR}, 
      #{shopId,jdbcType=BIGINT}, #{skuId,jdbcType=BIGINT}, #{totalCoin,jdbcType=INTEGER}, 
      #{presentCoin,jdbcType=INTEGER}, #{pictureUrl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zsl.malluserdb.po.OrderList">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="currentStatus != null">
        current_status,
      </if>
      <if test="tradeAmount != null">
        trade_amount,
      </if>
      <if test="tradeCount != null">
        trade_count,
      </if>
      <if test="tradePoint != null">
        trade_point,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="freightCharge != null">
        freight_charge,
      </if>
      <if test="tradeTime != null">
        trade_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderEvaluate != null">
        order_evaluate,
      </if>
      <if test="currentState != null">
        current_state,
      </if>
      <if test="childAmount != null">
        child_amount,
      </if>
      <if test="childCount != null">
        child_count,
      </if>
      <if test="childPoint != null">
        child_point,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="specValue != null">
        spec_value,
      </if>
      <if test="specName != null">
        spec_name,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="totalCoin != null">
        total_coin,
      </if>
      <if test="presentCoin != null">
        present_coin,
      </if>
      <if test="pictureUrl != null">
        picture_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="currentStatus != null">
        #{currentStatus,jdbcType=TINYINT},
      </if>
      <if test="tradeAmount != null">
        #{tradeAmount,jdbcType=REAL},
      </if>
      <if test="tradeCount != null">
        #{tradeCount,jdbcType=INTEGER},
      </if>
      <if test="tradePoint != null">
        #{tradePoint,jdbcType=INTEGER},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=BIT},
      </if>
      <if test="freightCharge != null">
        #{freightCharge,jdbcType=DECIMAL},
      </if>
      <if test="tradeTime != null">
        #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderEvaluate != null">
        #{orderEvaluate,jdbcType=BIT},
      </if>
      <if test="currentState != null">
        #{currentState,jdbcType=BIT},
      </if>
      <if test="childAmount != null">
        #{childAmount,jdbcType=DECIMAL},
      </if>
      <if test="childCount != null">
        #{childCount,jdbcType=INTEGER},
      </if>
      <if test="childPoint != null">
        #{childPoint,jdbcType=INTEGER},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="specValue != null">
        #{specValue,jdbcType=VARCHAR},
      </if>
      <if test="specName != null">
        #{specName,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="totalCoin != null">
        #{totalCoin,jdbcType=INTEGER},
      </if>
      <if test="presentCoin != null">
        #{presentCoin,jdbcType=INTEGER},
      </if>
      <if test="pictureUrl != null">
        #{pictureUrl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsl.malluserdb.po.OrderListExample" resultType="java.lang.Long">
    select count(*) from order_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.currentStatus != null">
        current_status = #{record.currentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.tradeAmount != null">
        trade_amount = #{record.tradeAmount,jdbcType=REAL},
      </if>
      <if test="record.tradeCount != null">
        trade_count = #{record.tradeCount,jdbcType=INTEGER},
      </if>
      <if test="record.tradePoint != null">
        trade_point = #{record.tradePoint,jdbcType=INTEGER},
      </if>
      <if test="record.evaluate != null">
        evaluate = #{record.evaluate,jdbcType=BIT},
      </if>
      <if test="record.freightCharge != null">
        freight_charge = #{record.freightCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeTime != null">
        trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderEvaluate != null">
        order_evaluate = #{record.orderEvaluate,jdbcType=BIT},
      </if>
      <if test="record.currentState != null">
        current_state = #{record.currentState,jdbcType=BIT},
      </if>
      <if test="record.childAmount != null">
        child_amount = #{record.childAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.childCount != null">
        child_count = #{record.childCount,jdbcType=INTEGER},
      </if>
      <if test="record.childPoint != null">
        child_point = #{record.childPoint,jdbcType=INTEGER},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.specValue != null">
        spec_value = #{record.specValue,jdbcType=VARCHAR},
      </if>
      <if test="record.specName != null">
        spec_name = #{record.specName,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=BIGINT},
      </if>
      <if test="record.totalCoin != null">
        total_coin = #{record.totalCoin,jdbcType=INTEGER},
      </if>
      <if test="record.presentCoin != null">
        present_coin = #{record.presentCoin,jdbcType=INTEGER},
      </if>
      <if test="record.pictureUrl != null">
        picture_url = #{record.pictureUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update order_list
    set id = #{record.id,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      current_status = #{record.currentStatus,jdbcType=TINYINT},
      trade_amount = #{record.tradeAmount,jdbcType=REAL},
      trade_count = #{record.tradeCount,jdbcType=INTEGER},
      trade_point = #{record.tradePoint,jdbcType=INTEGER},
      evaluate = #{record.evaluate,jdbcType=BIT},
      freight_charge = #{record.freightCharge,jdbcType=DECIMAL},
      trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_evaluate = #{record.orderEvaluate,jdbcType=BIT},
      current_state = #{record.currentState,jdbcType=BIT},
      child_amount = #{record.childAmount,jdbcType=DECIMAL},
      child_count = #{record.childCount,jdbcType=INTEGER},
      child_point = #{record.childPoint,jdbcType=INTEGER},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      spec_value = #{record.specValue,jdbcType=VARCHAR},
      spec_name = #{record.specName,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      total_coin = #{record.totalCoin,jdbcType=INTEGER},
      present_coin = #{record.presentCoin,jdbcType=INTEGER},
      picture_url = #{record.pictureUrl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_list
    set id = #{record.id,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      current_status = #{record.currentStatus,jdbcType=TINYINT},
      trade_amount = #{record.tradeAmount,jdbcType=REAL},
      trade_count = #{record.tradeCount,jdbcType=INTEGER},
      trade_point = #{record.tradePoint,jdbcType=INTEGER},
      evaluate = #{record.evaluate,jdbcType=BIT},
      freight_charge = #{record.freightCharge,jdbcType=DECIMAL},
      trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_evaluate = #{record.orderEvaluate,jdbcType=BIT},
      current_state = #{record.currentState,jdbcType=BIT},
      child_amount = #{record.childAmount,jdbcType=DECIMAL},
      child_count = #{record.childCount,jdbcType=INTEGER},
      child_point = #{record.childPoint,jdbcType=INTEGER},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      spec_value = #{record.specValue,jdbcType=VARCHAR},
      spec_name = #{record.specName,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      total_coin = #{record.totalCoin,jdbcType=INTEGER},
      present_coin = #{record.presentCoin,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.zsl.malluserdb.po.OrderListExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.zsl.malluserdb.po.OrderListExample" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from order_list
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>