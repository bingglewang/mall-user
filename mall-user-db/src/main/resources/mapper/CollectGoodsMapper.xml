<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsl.malluserdb.mapper.CollectGoodsMapper">
  <resultMap id="BaseResultMap" type="com.zsl.malluserdb.po.CollectGoods">
    <id column="collect_goods_id" jdbcType="INTEGER" property="collectGoodsId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime" />
    <result column="spu_id" jdbcType="INTEGER" property="spuId" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    collect_goods_id, `status`, user_id, cancel_time, spu_id, collect_time
  </sql>
  <select id="selectByExample" parameterType="com.zsl.malluserdb.po.CollectGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collect_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from collect_goods
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_goods
    where collect_goods_id = #{collectGoodsId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from collect_goods
    where collect_goods_id = #{collectGoodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect_goods
    where collect_goods_id = #{collectGoodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsl.malluserdb.po.CollectGoodsExample">
    delete from collect_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsl.malluserdb.po.CollectGoods">
    insert into collect_goods (collect_goods_id, `status`, user_id, 
      cancel_time, spu_id, collect_time
      )
    values (#{collectGoodsId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{cancelTime,jdbcType=TIMESTAMP}, #{spuId,jdbcType=INTEGER}, #{collectTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zsl.malluserdb.po.CollectGoods">
    insert into collect_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectGoodsId != null">
        collect_goods_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="cancelTime != null">
        cancel_time,
      </if>
      <if test="spuId != null">
        spu_id,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectGoodsId != null">
        #{collectGoodsId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null">
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spuId != null">
        #{spuId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsl.malluserdb.po.CollectGoodsExample" resultType="java.lang.Long">
    select count(*) from collect_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update collect_goods
    <set>
      <if test="record.collectGoodsId != null">
        collect_goods_id = #{record.collectGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.cancelTime != null">
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.spuId != null">
        spu_id = #{record.spuId,jdbcType=INTEGER},
      </if>
      <if test="record.collectTime != null">
        collect_time = #{record.collectTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update collect_goods
    set collect_goods_id = #{record.collectGoodsId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      spu_id = #{record.spuId,jdbcType=INTEGER},
      collect_time = #{record.collectTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsl.malluserdb.po.CollectGoods">
    update collect_goods
    <set>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null">
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spuId != null">
        spu_id = #{spuId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where collect_goods_id = #{collectGoodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsl.malluserdb.po.CollectGoods">
    update collect_goods
    set `status` = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      spu_id = #{spuId,jdbcType=INTEGER},
      collect_time = #{collectTime,jdbcType=TIMESTAMP}
    where collect_goods_id = #{collectGoodsId,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.zsl.malluserdb.po.CollectGoodsExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from collect_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from collect_goods
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>